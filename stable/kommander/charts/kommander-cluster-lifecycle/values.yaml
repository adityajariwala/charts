nameOverride: "kommander-cluster-lifecycle"

fullnameOverride: "kcl"

## Labels to apply to all resources
##
commonLabels: {}

## common node selector to all the pods
commonNodeSelector: {}

## common tolerations to all the pods
commonTolerations: []
# - key: "key"
#   operator: "Equal"
#   value: "value"
#   effect: "NoSchedule"

controller:
  containers:
    manager:
      replicas: 1
      image:
        repository: mesosphere/kommander-cluster-lifecycle-controller-manager
        tag:
        pullPolicy: IfNotPresent
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 500m
          memory: 128Mi
    proxy:
      image:
        repository: gcr.io/kubebuilder/kube-rbac-proxy
        tag: v0.4.0
        pullPolicy: IfNotPresent
      resources: {}
  securityContext:
    runAsUser: 65534
  service:
    annotations: {}
    type: ClusterIP
    port: 443
    # For nodeport, specify the following:
    #   type: NodePort
    #   nodePort: <port-number>

webhook:
  image:
    repository: mesosphere/kommander-cluster-lifecycle-webhook
    tag:
    pullPolicy: IfNotPresent
  ## Extra environment variables that will be pass onto deployment pods
  env: {}
  resources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext:
    runAsUser: 65534
  service:
    annotations: {}
    type: ClusterIP
    port: 443
    # For nodeport, specify the following:
    #   type: NodePort
    #   nodePort: <port-number>

terraformBackend:
  replicas: 1
  image:
    repository: jimmidyson/tf-kubernetes-configmap-backend
    tag: v0.1.0
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 100m
      memory: 30Mi
    requests:
      cpu: 100m
      memory: 20Mi
  securityContext:
    runAsUser: 65534
  service:
    annotations: {}
    type: ClusterIP
    port: 443
    # For nodeport, specify the following:
    #   type: NodePort
    #   nodePort: <port-number>

konvoy:
  imageRepository: mesosphere/konvoy
  allowUnofficialReleases: false
  versionCacheRefreshInterval: 1h  # A duration as specified in https://golang.org/pkg/time/#ParseDuration

kubeaddonsRepository:
  versionStrategy: repository-tag  # One of: `repository-tag`, `mapped-kubernetes-version`, `master`,
  versionCacheRefreshInterval: 1h  # A duration as specified in https://golang.org/pkg/time/#ParseDuration
  validTagPrefixes:                # Only applicable for `versionStrategy` of `repository-tag`
  - stable
  versionMap: {}  # Only applicable for `versionStrategy` of `mapped-kubernetes-version`

certificates:
  issuer:
    name:
    kind: Issuer
    selfSigned: false

utilityApiserver:
  image:
    repository: mesosphere/kommander-cluster-lifecycle-utility-apiserver
    tag:
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi
  securityContext:
    runAsUser: 65534
  service:
    annotations: {}
    type: ClusterIP
    port: 443

# This name must match the name of the kubefed dep
# in order to override values.
kubefed:
  controllermanager:
    repository: mesosphere
    tag: v0.1.1
    # override value is necessary due to a "featureGates":interface {}(nil)... spec.featureGates in body must be of type array: "null"
    # bug found
    featureGates:
      CrossClusterServiceDiscovery: "Disabled"
      FederatedIngress: "Enabled"
      PushReconciler: "Enabled"
      SchedulerPreferences: "Disabled"
    resources:
      limits:
        cpu: 500m
    certManager:
      enabled: true

federate:
  systemNamespace:
    enable: true
    name: kommander-system
  kubeaddons:
    image:
      repository: "mesosphere/kubeaddons"
      tag: "v0.9.4"
      pullPolicy: IfNotPresent
